# Define que a imagem base será a node 18-alpine, o "as" está definindo um nome para a imagem, que será "build".
FROM node:18-alpine as build

# Define que o diretório de trabalho será /usr/app.
WORKDIR /usr/app

# Copia o arquivo package.json e package-lock.json para o diretório /usr/app.
COPY package*.json ./

# Instala as dependências do projeto no diretório /usr/app quando a imagem for criada.
RUN npm install

# Copia todos os arquivos do projeto para o diretório /usr/app.
COPY . .

# Builda a aplicação para produção no diretório /usr/app quando a imagem for criada. 
RUN npm run build

# Define que a imagem base será a nginx:alpine.
FROM nginx:alpine

# Copia o arquivo de configuração do nginx para o diretório /etc/nginx/conf.d/default.conf.
COPY --from=build /usr/app/dist /usr/share/nginx/html

# Substitui o arquivo de configuração do nginx pelo arquivo nginx.conf.
COPY ./docker/nginx.conf /etc/nginx/conf.d/default.conf

# Expõe a porta 3000, que é a porta que o servidor do projeto está rodando.
EXPOSE 3000

# Está definindo o comando que será executado quando a imagem for iniciada, que é o comando nginx -g daemon off, responsável por iniciar o servidor do nginx.
CMD ["nginx", "-g", "daemon off;"]

